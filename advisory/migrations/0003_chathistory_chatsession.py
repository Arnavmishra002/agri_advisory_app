# Generated by Django 5.2.6 on 2025-10-05 09:44

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('advisory', '0002_forumpost'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(help_text='Unique user identifier', max_length=100)),
                ('session_id', models.CharField(help_text='Session identifier', max_length=100)),
                ('message_type', models.CharField(choices=[('user', 'User Message'), ('assistant', 'Assistant Response'), ('system', 'System Message')], help_text='Type of message', max_length=20)),
                ('message_content', models.TextField(help_text='The actual message content')),
                ('detected_language', models.CharField(help_text='Detected language', max_length=10)),
                ('response_language', models.CharField(help_text='Response language', max_length=10)),
                ('confidence_score', models.FloatField(blank=True, help_text='Confidence score of response', null=True)),
                ('response_source', models.CharField(help_text='Source of response (advanced_chatbot, fallback, etc.)', max_length=50)),
                ('response_type', models.CharField(help_text='Type of response (greeting, agricultural, etc.)', max_length=50)),
                ('has_location', models.BooleanField(default=False, help_text='Whether location was detected')),
                ('has_product', models.BooleanField(default=False, help_text='Whether product was mentioned')),
                ('latitude', models.FloatField(blank=True, help_text="User's latitude", null=True)),
                ('longitude', models.FloatField(blank=True, help_text="User's longitude", null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'chat_history',
                'ordering': ['session_id', 'created_at'],
                'indexes': [models.Index(fields=['user_id', 'session_id'], name='chat_histor_user_id_709a35_idx'), models.Index(fields=['session_id', 'created_at'], name='chat_histor_session_993bcf_idx'), models.Index(fields=['user_id', 'created_at'], name='chat_histor_user_id_aa050a_idx')],
            },
        ),
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(help_text='Unique user identifier', max_length=100)),
                ('session_id', models.CharField(help_text='Unique session identifier', max_length=100, unique=True)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('conversation_context', models.JSONField(default=dict, help_text='Persistent conversation context including location, preferences, etc.')),
                ('preferred_language', models.CharField(default='auto', max_length=10)),
                ('location_name', models.CharField(blank=True, max_length=200, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('total_messages', models.IntegerField(default=0)),
                ('user_messages', models.IntegerField(default=0)),
                ('assistant_messages', models.IntegerField(default=0)),
                ('device_type', models.CharField(blank=True, max_length=50, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
            ],
            options={
                'db_table': 'chat_sessions',
                'indexes': [models.Index(fields=['user_id', 'start_time'], name='chat_sessio_user_id_eb86b5_idx'), models.Index(fields=['session_id'], name='chat_sessio_session_a3bcba_idx'), models.Index(fields=['is_active', 'last_activity'], name='chat_sessio_is_acti_df7e11_idx')],
            },
        ),
    ]
