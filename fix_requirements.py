#!/usr/bin/env python3
"""
Fix Requirements File
Remove invalid threading dependency and redeploy
"""

import subprocess
import os

def fix_requirements_and_deploy():
    """Fix the requirements file and redeploy"""
    print("üîß FIXING REQUIREMENTS FILE")
    print("=" * 50)
    
    try:
        # Change to project directory
        os.chdir(r"C:\AI\agri_advisory_app")
        
        # Add the fix
        print("üìù Adding requirements fix to git...")
        subprocess.run(["git", "add", "requirements-production.txt"], check=True)
        
        # Commit the fix
        print("üíæ Committing requirements fix...")
        commit_message = "üîß Fix requirements-production.txt - Remove invalid threading dependency"
        subprocess.run(["git", "commit", "-m", commit_message], check=True)
        
        # Push to GitHub (triggers Render deployment)
        print("üåê Pushing fix to GitHub (triggers Render deployment)...")
        subprocess.run(["git", "push", "origin", "main"], check=True)
        
        print("\n‚úÖ REQUIREMENTS FIXED AND DEPLOYED!")
        print("üîó Your app will be updated at: https://krishmitra-zrk4.onrender.com")
        print("üìä Render Dashboard: https://dashboard.render.com/web/srv-d3ijghjipnbc73e8boi0")
        
        print("\nüîß FIX APPLIED:")
        print("‚Ä¢ Removed invalid 'threading>=1.0.0' dependency")
        print("‚Ä¢ Threading is a built-in Python module")
        print("‚Ä¢ Deployment should now succeed")
        
        return True
        
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Deployment error: {e}")
        return False
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return False

def main():
    """Main function"""
    success = fix_requirements_and_deploy()
    
    if success:
        print("\nüéâ REQUIREMENTS FIX COMPLETE!")
        print("The deployment should now succeed without the threading dependency error.")
        print("\n‚è±Ô∏è  Deployment will take a few minutes...")
        print("Check the Render dashboard for progress.")
    else:
        print("\n‚ùå FIX FAILED")
        print("Please check the error messages above.")

if __name__ == "__main__":
    main()



